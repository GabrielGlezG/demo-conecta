{"ast":null,"code":"const API_BASE_URL='http://localhost:5000/api';export const fetchProjects=async()=>{const response=await fetch(`${API_BASE_URL}/projects`);if(!response.ok){throw new Error('Error al obtener los proyectos');}return response.json();};export const fetchSurveys=async projectId=>{const response=await fetch(`${API_BASE_URL}/projects/${projectId}/responses`);if(!response.ok){throw new Error('Error al obtener las encuestas');}return response.json();};","map":{"version":3,"names":["API_BASE_URL","fetchProjects","response","fetch","ok","Error","json","fetchSurveys","projectId"],"sources":["C:/Users/gonza/OneDrive/Escritorio/demo-kobo/frontend/src/services/apiService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nexport const fetchProjects = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/projects`);\r\n  if (!response.ok) {\r\n    throw new Error('Error al obtener los proyectos');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const fetchSurveys = async (projectId) => {\r\n  const response = await fetch(`${API_BASE_URL}/projects/${projectId}/responses`);\r\n  if (!response.ok) {\r\n    throw new Error('Error al obtener las encuestas');\r\n  }\r\n  return response.json();\r\n};"],"mappings":"AAAA,KAAM,CAAAA,YAAY,CAAG,2BAA2B,CAEhD,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CACvC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,YAAY,WAAW,CAAC,CACxD,GAAI,CAACE,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,gCAAgC,CAAC,CACnD,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,SAAS,EAAK,CAC/C,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,YAAY,aAAaQ,SAAS,YAAY,CAAC,CAC/E,GAAI,CAACN,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,gCAAgC,CAAC,CACnD,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}