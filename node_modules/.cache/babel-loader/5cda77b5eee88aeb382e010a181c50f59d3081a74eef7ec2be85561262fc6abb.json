{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\OneDrive\\\\Escritorio\\\\front_kobo\\\\src\\\\Components\\\\ShowProjects.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [surveys, setSurveys] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Cargar proyectos\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:5000/api/projects');\n      if (!response.ok) {\n        throw new Error('Error al obtener los proyectos');\n      }\n      const data = await response.json();\n\n      // Filtra proyectos que tengan nombre y descripción\n      const filteredProjects = data.filter(project => {\n        var _project$settings;\n        return project.name && ((_project$settings = project.settings) === null || _project$settings === void 0 ? void 0 : _project$settings.description);\n      });\n      setProjects(filteredProjects);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Cargar encuestas de un proyecto\n  const fetchSurveys = async projectId => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://localhost:5000/api/projects/${projectId}/responses`);\n      if (!response.ok) {\n        throw new Error('Error al obtener las encuestas');\n      }\n      const data = await response.json();\n      setSurveys(data);\n      setSelectedProject(projectId);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchProjects,\n        children: \"Reintentar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Proyectos de KoboToolbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), !selectedProject ?\n    /*#__PURE__*/\n    // Lista de proyectos\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selecciona un proyecto:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), projects.map(project => {\n        var _project$settings2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => fetchSurveys(project.uid),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Descripci\\xF3n: \", ((_project$settings2 = project.settings) === null || _project$settings2 === void 0 ? void 0 : _project$settings2.description) || 'Sin descripción']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Ver encuestas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, project.uid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Vista de encuestas\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedProject(null),\n        children: \"\\u2190 Volver a proyectos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Encuestas del proyecto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), surveys.map((survey, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Encuesta #\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), Object.entries(survey).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [key, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this), \" \", String(value)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"9BHCdb320CwJG2Mt6dDONSXsPwc=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","selectedProject","setSelectedProject","surveys","setSurveys","loading","setLoading","error","setError","fetchProjects","response","fetch","ok","Error","data","json","filteredProjects","filter","project","_project$settings","name","settings","description","err","message","fetchSurveys","projectId","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_project$settings2","uid","survey","index","Object","entries","key","value","String","_c","$RefreshReg$"],"sources":["C:/Users/gonza/OneDrive/Escritorio/front_kobo/src/Components/ShowProjects.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Cargar proyectos\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('http://localhost:5000/api/projects');\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener los proyectos');\r\n      }\r\n      const data = await response.json();\r\n\r\n      // Filtra proyectos que tengan nombre y descripción\r\n      const filteredProjects = data.filter(\r\n        (project) => project.name && project.settings?.description\r\n      );\r\n\r\n      setProjects(filteredProjects);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Cargar encuestas de un proyecto\r\n  const fetchSurveys = async (projectId) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`http://localhost:5000/api/projects/${projectId}/responses`);\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener las encuestas');\r\n      }\r\n      const data = await response.json();\r\n      setSurveys(data);\r\n      setSelectedProject(projectId);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Cargando...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div>\r\n        <p>Error: {error}</p>\r\n        <button onClick={fetchProjects}>Reintentar</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Proyectos de KoboToolbox</h1>\r\n\r\n      {!selectedProject ? (\r\n        // Lista de proyectos\r\n        <div>\r\n          <h2>Selecciona un proyecto:</h2>\r\n          {projects.map((project) => (\r\n            <div key={project.uid} onClick={() => fetchSurveys(project.uid)}>\r\n              <h3>{project.name}</h3>\r\n              <p>Descripción: {project.settings?.description || 'Sin descripción'}</p>\r\n              <button>Ver encuestas</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        // Vista de encuestas\r\n        <div>\r\n          <button onClick={() => setSelectedProject(null)}>← Volver a proyectos</button>\r\n          <h2>Encuestas del proyecto</h2>\r\n          {surveys.map((survey, index) => (\r\n            <div key={index}>\r\n              <h3>Encuesta #{index + 1}</h3>\r\n              {Object.entries(survey).map(([key, value]) => (\r\n                <div key={key}>\r\n                  <strong>{key}:</strong> {String(value)}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACde,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACnD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,gBAAgB,GAAGF,IAAI,CAACG,MAAM,CACjCC,OAAO;QAAA,IAAAC,iBAAA;QAAA,OAAKD,OAAO,CAACE,IAAI,MAAAD,iBAAA,GAAID,OAAO,CAACG,QAAQ,cAAAF,iBAAA,uBAAhBA,iBAAA,CAAkBG,WAAW;MAAA,CAC5D,CAAC;MAEDtB,WAAW,CAACgB,gBAAgB,CAAC;MAC7BV,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,CAAC;MACrBlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMmB,YAAY,GAAG,MAAOC,SAAS,IAAK;IACxC,IAAI;MACFpB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsCe,SAAS,YAAY,CAAC;MACzF,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACnD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCX,UAAU,CAACU,IAAI,CAAC;MAChBZ,kBAAkB,CAACwB,SAAS,CAAC;MAC7BpB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,CAAC;MACrBlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAID,OAAO,EAAE;IACX,oBAAOT,OAAA;MAAA+B,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B;EAEA,IAAIxB,KAAK,EAAE;IACT,oBACEX,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,GAAG,SAAO,EAACpB,KAAK;MAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBnC,OAAA;QAAQoC,OAAO,EAAEvB,aAAc;QAAAkB,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAEV;EAEA,oBACEnC,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEhC,CAAC9B,eAAe;IAAA;IACf;IACAL,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC/BhC,QAAQ,CAACkC,GAAG,CAAEf,OAAO;QAAA,IAAAgB,kBAAA;QAAA,oBACpBtC,OAAA;UAAuBoC,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAACP,OAAO,CAACiB,GAAG,CAAE;UAAAR,QAAA,gBAC9D/B,OAAA;YAAA+B,QAAA,EAAKT,OAAO,CAACE;UAAI;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBnC,OAAA;YAAA+B,QAAA,GAAG,kBAAa,EAAC,EAAAO,kBAAA,GAAAhB,OAAO,CAACG,QAAQ,cAAAa,kBAAA,uBAAhBA,kBAAA,CAAkBZ,WAAW,KAAI,iBAAiB;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxEnC,OAAA;YAAA+B,QAAA,EAAQ;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAHtBb,OAAO,CAACiB,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIhB,CAAC;MAAA,CACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;IAAA;IAEN;IACAnC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAQoC,OAAO,EAAEA,CAAA,KAAM9B,kBAAkB,CAAC,IAAI,CAAE;QAAAyB,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9EnC,OAAA;QAAA+B,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC9B5B,OAAO,CAAC8B,GAAG,CAAC,CAACG,MAAM,EAAEC,KAAK,kBACzBzC,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UAAA+B,QAAA,GAAI,YAAU,EAACU,KAAK,GAAG,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC7BO,MAAM,CAACC,OAAO,CAACH,MAAM,CAAC,CAACH,GAAG,CAAC,CAAC,CAACO,GAAG,EAAEC,KAAK,CAAC,kBACvC7C,OAAA;UAAA+B,QAAA,gBACE/B,OAAA;YAAA+B,QAAA,GAASa,GAAG,EAAC,GAAC;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACW,MAAM,CAACD,KAAK,CAAC;QAAA,GAD9BD,GAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACN,CAAC;MAAA,GANMM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CApGID,QAAQ;AAAA8C,EAAA,GAAR9C,QAAQ;AAsGd,eAAeA,QAAQ;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}