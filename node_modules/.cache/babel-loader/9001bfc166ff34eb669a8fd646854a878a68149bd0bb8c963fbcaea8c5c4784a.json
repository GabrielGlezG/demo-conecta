{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\OneDrive\\\\Escritorio\\\\front_kobo\\\\src\\\\Components\\\\ShowProjects.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Importa Bootstrap\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [surveys, setSurveys] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Cargar proyectos\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:5000/api/projects');\n      if (!response.ok) {\n        throw new Error('Error al obtener los proyectos');\n      }\n      const data = await response.json();\n\n      // Filtra proyectos que tengan nombre y descripción\n      const filteredProjects = data.filter(project => {\n        var _project$settings;\n        return project.name && ((_project$settings = project.settings) === null || _project$settings === void 0 ? void 0 : _project$settings.description);\n      });\n      setProjects(filteredProjects);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Cargar encuestas de un proyecto\n  const fetchSurveys = async projectId => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://localhost:5000/api/projects/${projectId}/responses`);\n      if (!response.ok) {\n        throw new Error('Error al obtener las encuestas');\n      }\n      const data = await response.json();\n      setSurveys(data);\n      setSelectedProject(projectId);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Función para formatear nombres de campos\n  const formatFieldName = fieldName => {\n    return fieldName.replace(/^_/, '') // Eliminar el primer guión bajo\n    .replace(/_/g, ' ') // Reemplazar guiones bajos con espacios\n    .replace(/([A-Z])/g, ' $1') // Separar palabras en camelCase\n    .trim() // Eliminar espacios al inicio y al final\n    .replace(/^[a-z]/, match => match.toUpperCase()); // Capitalizar la primera letra\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchProjects,\n        children: \"Reintentar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Proyectos de KoboToolbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), !selectedProject ?\n    /*#__PURE__*/\n    // Lista de proyectos\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selecciona un proyecto:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), projects.map(project => {\n        var _project$settings2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Descripci\\xF3n: \", ((_project$settings2 = project.settings) === null || _project$settings2 === void 0 ? void 0 : _project$settings2.description) || 'Sin descripción']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => fetchSurveys(project.uid),\n              children: \"Ver encuestas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, project.uid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Vista de encuestas\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary mb-3\",\n        onClick: () => setSelectedProject(null),\n        children: \"\\u2190 Volver a proyectos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Encuestas del proyecto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), surveys.map((survey, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: [\"Encuesta #\", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), Object.entries(survey).map(([key, value]) => {\n            // Excluir campos innecesarios\n            if (key.startsWith('_') && !['_submission_time', '_geolocation'].includes(key)) {\n              return null;\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [formatFieldName(key), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 23\n              }, this), \" \", String(value)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"9BHCdb320CwJG2Mt6dDONSXsPwc=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","selectedProject","setSelectedProject","surveys","setSurveys","loading","setLoading","error","setError","fetchProjects","response","fetch","ok","Error","data","json","filteredProjects","filter","project","_project$settings","name","settings","description","err","message","fetchSurveys","projectId","formatFieldName","fieldName","replace","trim","match","toUpperCase","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","_project$settings2","uid","survey","index","Object","entries","key","value","startsWith","includes","String","_c","$RefreshReg$"],"sources":["C:/Users/gonza/OneDrive/Escritorio/front_kobo/src/Components/ShowProjects.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Importa Bootstrap\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Cargar proyectos\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('http://localhost:5000/api/projects');\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener los proyectos');\r\n      }\r\n      const data = await response.json();\r\n\r\n      // Filtra proyectos que tengan nombre y descripción\r\n      const filteredProjects = data.filter(\r\n        (project) => project.name && project.settings?.description\r\n      );\r\n\r\n      setProjects(filteredProjects);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Cargar encuestas de un proyecto\r\n  const fetchSurveys = async (projectId) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`http://localhost:5000/api/projects/${projectId}/responses`);\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener las encuestas');\r\n      }\r\n      const data = await response.json();\r\n      setSurveys(data);\r\n      setSelectedProject(projectId);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Función para formatear nombres de campos\r\n  const formatFieldName = (fieldName) => {\r\n    return fieldName\r\n      .replace(/^_/, '') // Eliminar el primer guión bajo\r\n      .replace(/_/g, ' ') // Reemplazar guiones bajos con espacios\r\n      .replace(/([A-Z])/g, ' $1') // Separar palabras en camelCase\r\n      .trim() // Eliminar espacios al inicio y al final\r\n      .replace(/^[a-z]/, (match) => match.toUpperCase()); // Capitalizar la primera letra\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Cargando...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div>\r\n        <p>Error: {error}</p>\r\n        <button onClick={fetchProjects}>Reintentar</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h1>Proyectos de KoboToolbox</h1>\r\n\r\n      {!selectedProject ? (\r\n        // Lista de proyectos\r\n        <div>\r\n          <h2>Selecciona un proyecto:</h2>\r\n          {projects.map((project) => (\r\n            <div key={project.uid} className=\"card mb-3\">\r\n              <div className=\"card-body\">\r\n                <h3 className=\"card-title\">{project.name}</h3>\r\n                <p className=\"card-text\">\r\n                  Descripción: {project.settings?.description || 'Sin descripción'}\r\n                </p>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => fetchSurveys(project.uid)}\r\n                >\r\n                  Ver encuestas\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        // Vista de encuestas\r\n        <div>\r\n          <button\r\n            className=\"btn btn-secondary mb-3\"\r\n            onClick={() => setSelectedProject(null)}\r\n          >\r\n            ← Volver a proyectos\r\n          </button>\r\n          <h2>Encuestas del proyecto</h2>\r\n          {surveys.map((survey, index) => (\r\n            <div key={index} className=\"card mb-3\">\r\n              <div className=\"card-body\">\r\n                <h3 className=\"card-title\">Encuesta #{index + 1}</h3>\r\n                {Object.entries(survey).map(([key, value]) => {\r\n                  // Excluir campos innecesarios\r\n                  if (\r\n                    key.startsWith('_') &&\r\n                    !['_submission_time', '_geolocation'].includes(key)\r\n                  ) {\r\n                    return null;\r\n                  }\r\n\r\n                  return (\r\n                    <div key={key} className=\"mb-2\">\r\n                      <strong>{formatFieldName(key)}:</strong> {String(value)}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}