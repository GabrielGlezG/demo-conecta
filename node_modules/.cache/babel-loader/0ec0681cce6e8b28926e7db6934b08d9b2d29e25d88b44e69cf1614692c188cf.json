{"ast":null,"code":"import React,{useState,useEffect}from'react';import ProjectList from'./ProjectList';import SurveyList from'./SurveyList';import LoadingSpinner from'./Spinner';import{fetchProjects,fetchSurveys}from'../services/apiService';import{Pagination}from'react-bootstrap';// Sólo se necesita importar Pagination\nimport{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const Projects=()=>{const[projects,setProjects]=useState([]);const[selectedProject,setSelectedProject]=useState(null);const[surveys,setSurveys]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[currentPage,setCurrentPage]=useState(1);// Estado para la página actual\nconst[projectsPerPage]=useState(5);// Número de proyectos por página\n// Cargar proyectos\nuseEffect(()=>{const loadProjects=async()=>{try{const data=await fetchProjects();const filteredProjects=data.filter(project=>{var _project$settings;return project.name&&((_project$settings=project.settings)===null||_project$settings===void 0?void 0:_project$settings.description);});setProjects(filteredProjects);}catch(err){setError(err.message);}finally{setLoading(false);}};loadProjects();},[]);// Cargar encuestas de un proyecto\nconst handleFetchSurveys=async projectId=>{try{setLoading(true);const data=await fetchSurveys(projectId);setSurveys(data);setSelectedProject(projectId);}catch(err){setError(err.message);}finally{setLoading(false);}};// Lógica de paginación\nconst indexOfLastProject=currentPage*projectsPerPage;const indexOfFirstProject=indexOfLastProject-projectsPerPage;const currentProjects=projects.slice(indexOfFirstProject,indexOfLastProject);// Cambiar de página\nconst nextPage=()=>{if(currentPage<Math.ceil(projects.length/projectsPerPage)){setCurrentPage(currentPage+1);}};const prevPage=()=>{if(currentPage>1){setCurrentPage(currentPage-1);}};// Función para manejar el cambio de página\nconst handlePageChange=pageNumber=>{setCurrentPage(pageNumber);};if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),children:\"Reintentar\"})]});}return/*#__PURE__*/_jsx(\"div\",{className:\"container mt-4\",children:loading?/*#__PURE__*/_jsx(LoadingSpinner,{}):/*#__PURE__*/_jsx(_Fragment,{children:!selectedProject?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ProjectList,{projects:currentProjects,onProjectSelect:handleFetchSurveys}),/*#__PURE__*/_jsxs(Pagination,{className:\"mt-4 ms-auto d-flex justify-content-end\",children:[/*#__PURE__*/_jsx(Pagination.Prev,{disabled:currentPage===1,onClick:prevPage}),[...Array(Math.ceil(projects.length/projectsPerPage))].map((_,index)=>/*#__PURE__*/_jsx(Pagination.Item,{active:index+1===currentPage,onClick:()=>handlePageChange(index+1),children:index+1},index+1)),/*#__PURE__*/_jsx(Pagination.Next,{disabled:currentPage===Math.ceil(projects.length/projectsPerPage),onClick:nextPage})]})]}):/*#__PURE__*/_jsx(SurveyList,{surveys:surveys,onBack:()=>{setSelectedProject(null);setCurrentPage(1);// Reinicia la paginación al volver\n}})})});};export default Projects;","map":{"version":3,"names":["React","useState","useEffect","ProjectList","SurveyList","LoadingSpinner","fetchProjects","fetchSurveys","Pagination","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Projects","projects","setProjects","selectedProject","setSelectedProject","surveys","setSurveys","loading","setLoading","error","setError","currentPage","setCurrentPage","projectsPerPage","loadProjects","data","filteredProjects","filter","project","_project$settings","name","settings","description","err","message","handleFetchSurveys","projectId","indexOfLastProject","indexOfFirstProject","currentProjects","slice","nextPage","Math","ceil","length","prevPage","handlePageChange","pageNumber","className","children","onClick","window","location","reload","onProjectSelect","Prev","disabled","Array","map","_","index","Item","active","Next","onBack"],"sources":["C:/Users/gonza/OneDrive/Escritorio/demo-kobo/frontend/src/components/Projects.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProjectList from './ProjectList';\r\nimport SurveyList from './SurveyList';\r\nimport LoadingSpinner from './Spinner';\r\nimport { fetchProjects, fetchSurveys } from '../services/apiService';\r\nimport { Pagination } from 'react-bootstrap'; // Sólo se necesita importar Pagination\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1); // Estado para la página actual\r\n  const [projectsPerPage] = useState(5); // Número de proyectos por página\r\n\r\n  // Cargar proyectos\r\n  useEffect(() => {\r\n    const loadProjects = async () => {\r\n      try {\r\n        const data = await fetchProjects();\r\n        const filteredProjects = data.filter(\r\n          (project) => project.name && project.settings?.description\r\n        );\r\n        setProjects(filteredProjects);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadProjects();\r\n  }, []);\r\n\r\n  // Cargar encuestas de un proyecto\r\n  const handleFetchSurveys = async (projectId) => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await fetchSurveys(projectId);\r\n      setSurveys(data);\r\n      setSelectedProject(projectId);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Lógica de paginación\r\n  const indexOfLastProject = currentPage * projectsPerPage;\r\n  const indexOfFirstProject = indexOfLastProject - projectsPerPage;\r\n  const currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\r\n\r\n  // Cambiar de página\r\n  const nextPage = () => {\r\n    if (currentPage < Math.ceil(projects.length / projectsPerPage)) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  // Función para manejar el cambio de página\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <p>Error: {error}</p>\r\n        <button onClick={() => window.location.reload()}>Reintentar</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {loading ? (\r\n        <LoadingSpinner />\r\n      ) : (\r\n        <>\r\n          {!selectedProject ? (\r\n            <>\r\n              <ProjectList projects={currentProjects} onProjectSelect={handleFetchSurveys} />\r\n\r\n              {/* Paginación alineada a la derecha */}\r\n              <Pagination className=\"mt-4 ms-auto d-flex justify-content-end\">\r\n                <Pagination.Prev \r\n                  disabled={currentPage === 1} \r\n                  onClick={prevPage} \r\n                />\r\n                {[...Array(Math.ceil(projects.length / projectsPerPage))].map((_, index) => (\r\n                  <Pagination.Item \r\n                    key={index + 1} \r\n                    active={index + 1 === currentPage} \r\n                    onClick={() => handlePageChange(index + 1)}\r\n                  >\r\n                    {index + 1}\r\n                  </Pagination.Item>\r\n                ))}\r\n                <Pagination.Next \r\n                  disabled={currentPage === Math.ceil(projects.length / projectsPerPage)} \r\n                  onClick={nextPage} \r\n                />\r\n              </Pagination>\r\n            </>\r\n          ) : (\r\n            <SurveyList\r\n              surveys={surveys}\r\n              onBack={() => {\r\n                setSelectedProject(null);\r\n                setCurrentPage(1); // Reinicia la paginación al volver\r\n              }}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}