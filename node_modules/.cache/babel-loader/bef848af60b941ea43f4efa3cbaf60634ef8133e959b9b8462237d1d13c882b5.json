{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\OneDrive\\\\Escritorio\\\\front_kobo\\\\src\\\\components\\\\Projects.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProjectList from './ProjectList';\nimport SurveyList from './SurveyList';\nimport LoadingSpinner from './Spinner';\nimport { fetchProjects, fetchSurveys } from '../services/apiService';\nimport { Pagination } from 'react-bootstrap'; // Importa el componente Pagination\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [surveys, setSurveys] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1); // Estado para la página actual\n  const [projectsPerPage] = useState(5); // Número de proyectos por página\n\n  // Cargar proyectos\n  useEffect(() => {\n    const loadProjects = async () => {\n      try {\n        const data = await fetchProjects();\n        const filteredProjects = data.filter(project => {\n          var _project$settings;\n          return project.name && ((_project$settings = project.settings) === null || _project$settings === void 0 ? void 0 : _project$settings.description);\n        });\n        setProjects(filteredProjects);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadProjects();\n  }, []);\n\n  // Cargar encuestas de un proyecto\n  const handleFetchSurveys = async projectId => {\n    try {\n      setLoading(true);\n      const data = await fetchSurveys(projectId);\n      setSurveys(data);\n      setSelectedProject(projectId);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Lógica de paginación\n  const indexOfLastProject = currentPage * projectsPerPage;\n  const indexOfFirstProject = indexOfLastProject - projectsPerPage;\n  const currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n\n  // Cambiar de página\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Reintentar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !selectedProject ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ProjectList, {\n          projects: currentProjects,\n          onProjectSelect: handleFetchSurveys\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          className: \"mt-4\",\n          children: [...Array(Math.ceil(projects.length / projectsPerPage)).keys()].map(number => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n            active: number + 1 === currentPage,\n            onClick: () => paginate(number + 1),\n            children: number + 1\n          }, number + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(SurveyList, {\n        surveys: surveys,\n        onBack: () => setSelectedProject(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"05MQPiaFRCfR38rNPYORSn4tInY=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","ProjectList","SurveyList","LoadingSpinner","fetchProjects","fetchSurveys","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","Projects","_s","projects","setProjects","selectedProject","setSelectedProject","surveys","setSurveys","loading","setLoading","error","setError","currentPage","setCurrentPage","projectsPerPage","loadProjects","data","filteredProjects","filter","project","_project$settings","name","settings","description","err","message","handleFetchSurveys","projectId","indexOfLastProject","indexOfFirstProject","currentProjects","slice","paginate","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","onProjectSelect","Array","Math","ceil","length","keys","map","number","Item","active","onBack","_c","$RefreshReg$"],"sources":["C:/Users/gonza/OneDrive/Escritorio/front_kobo/src/components/Projects.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProjectList from './ProjectList';\r\nimport SurveyList from './SurveyList';\r\nimport LoadingSpinner from './Spinner';\r\nimport { fetchProjects, fetchSurveys } from '../services/apiService';\r\nimport { Pagination } from 'react-bootstrap'; // Importa el componente Pagination\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1); // Estado para la página actual\r\n  const [projectsPerPage] = useState(5); // Número de proyectos por página\r\n\r\n  // Cargar proyectos\r\n  useEffect(() => {\r\n    const loadProjects = async () => {\r\n      try {\r\n        const data = await fetchProjects();\r\n        const filteredProjects = data.filter(\r\n          (project) => project.name && project.settings?.description\r\n        );\r\n        setProjects(filteredProjects);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadProjects();\r\n  }, []);\r\n\r\n  // Cargar encuestas de un proyecto\r\n  const handleFetchSurveys = async (projectId) => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await fetchSurveys(projectId);\r\n      setSurveys(data);\r\n      setSelectedProject(projectId);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Lógica de paginación\r\n  const indexOfLastProject = currentPage * projectsPerPage;\r\n  const indexOfFirstProject = indexOfLastProject - projectsPerPage;\r\n  const currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\r\n\r\n  // Cambiar de página\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <p>Error: {error}</p>\r\n        <button onClick={() => window.location.reload()}>Reintentar</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {loading ? (\r\n        <LoadingSpinner />\r\n      ) : (\r\n        <>\r\n          {!selectedProject ? (\r\n            <>\r\n              <ProjectList projects={currentProjects} onProjectSelect={handleFetchSurveys} />\r\n              {/* Paginación */}\r\n              <Pagination className=\"mt-4\">\r\n                {[...Array(Math.ceil(projects.length / projectsPerPage)).keys()].map((number) => (\r\n                  <Pagination.Item\r\n                    key={number + 1}\r\n                    active={number + 1 === currentPage}\r\n                    onClick={() => paginate(number + 1)}\r\n                  >\r\n                    {number + 1}\r\n                  </Pagination.Item>\r\n                ))}\r\n              </Pagination>\r\n            </>\r\n          ) : (\r\n            <SurveyList\r\n              surveys={surveys}\r\n              onBack={() => setSelectedProject(null)}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}