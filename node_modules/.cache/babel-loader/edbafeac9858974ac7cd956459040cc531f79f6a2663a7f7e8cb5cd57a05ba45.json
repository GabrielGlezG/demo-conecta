{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\front-demo\\\\src\\\\components\\\\SurveyList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { Card, Button, Accordion, Image, Alert, Spinner } from 'react-bootstrap';\nimport { ArrowLeft } from 'react-bootstrap-icons';\n\n// URL de la API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api/surveys';\n\n// Campos que se deben excluir de la visualización\nconst EXCLUDED_FIELDS = new Set(['_id', 'start', 'end', 'formhub/uuid', '_status', '_geolocation', '_tags', '_notes', '_validation_status', '_submitted_by', '_submission_time', '__version__', '_uuid', 'meta/instanceID', 'meta/rootUuid', 'meta/deprecatedID']);\n\n// Grupos de preguntas\nconst GROUPS = {\n  \"Información General\": [\"nombre_subestacion\", \"Ubicacion\", \"codigo_id\", \"fecha_reporte\", \"inspector_responsable\"],\n  \"Transformadores\": [\"cantidad_transformadores\", \"tipo_transformador\", \"potencia_nominal\", \"tension_primaria\", \"tension_secundaria\", \"relacion_transformacion\", \"temperatura_operacion\", \"nivel_aceite\", \"foto_nivel_aceite\"],\n  \"Celdas e Interruptores\": [\"cantidad_celdas\", \"tipo_interruptor\", \"corriente_nominal\", \"voltaje_operacion\", \"estado_barras\", \"foto_estado_barras\"],\n  \"Protección y Seguridad\": [\"tipo_reles\", \"configuracion_disparo\", \"corriente_disparo\", \"tiempos_disparo\", \"estado_baterias\", \"foto_estado_baterias\"],\n  \"Puesta a Tierra\": [\"resistencia_tierra\", \"estado_conexiones_tierra\", \"foto_estado_tierra\"],\n  \"Enfriamiento y Comunicación\": [\"tipo_enfriamiento\", \"estado_ventiladores\", \"foto_estado_ventiladores\", \"tipo_comunicacion\", \"estado_comunicacion\"],\n  \"Condiciones Ambientales\": [\"temperatura_ambiente\", \"humedad_relativa\", \"condiciones_climaticas\", \"foto_condiciones_climaticas\"],\n  \"Observaciones y Acciones Correctivas\": [\"observaciones_generales\", \"acciones_correctivas\", \"urgencia_accion\", \"firma_inspector\"]\n};\n\n// 🔹 **FUNCIONES DE PROCESAMIENTO** 🔹\n\n// 1️⃣ Normaliza claves quitando prefijos `group_xxx/`\nconst normalizeKeys = data => {\n  let normalizedData = {};\n  for (let key in data) {\n    let newKey = key.split('/').pop(); // Elimina los prefijos del grupo\n    normalizedData[newKey] = data[key];\n  }\n  return normalizedData;\n};\n\n// 2️⃣ Asocia imágenes con sus preguntas correspondientes\nconst mapAttachments = response => {\n  let imageMap = {};\n  if (response._attachments) {\n    response._attachments.forEach(att => {\n      let key = att.question_xpath ? att.question_xpath.split('/').pop() : null;\n      if (key) imageMap[key] = att.download_url;\n    });\n  }\n  return imageMap;\n};\n\n// 3️⃣ Extrae coordenadas correctamente\nconst parseCoordinates = locationString => {\n  if (!locationString) return null;\n  let coords = locationString.split(' ');\n  if (coords.length >= 2) {\n    return {\n      lat: parseFloat(coords[0]),\n      lon: parseFloat(coords[1])\n    };\n  }\n  return null;\n};\n\n// 🔹 **COMPONENTES REACT** 🔹\n\nconst BackButton = ({\n  onClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(Button, {\n  variant: \"link\",\n  onClick: onClick,\n  className: \"text-decoration-none p-0\",\n  children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this), \" \", text]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 3\n}, this);\n_c = BackButton;\nconst renderValue = (key, value, imageMap) => {\n  if (value == null) return 'No respondido';\n\n  // Si es una imagen\n  if (imageMap[key]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: imageMap[key],\n        alt: key,\n        thumbnail: true,\n        style: {\n          maxWidth: '150px',\n          maxHeight: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: imageMap[key],\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Ver imagen en tama\\xF1o completo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si es un alerta (ej: temperatura alta)\n  if (key === 'temperatura_operacion' && Number(value) > 100) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u26A0 Advertencia:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }, this), \" Temperatura alta (\", value, \"\\xB0C)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return Array.isArray(value) ? value.join(', ') : String(value);\n};\nconst SurveyResponses = ({\n  onBack\n}) => {\n  _s();\n  var _groupedResponses$sel;\n  const [surveys, setSurveys] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [view, setView] = useState('summary');\n  const [selectedDate, setSelectedDate] = useState(null);\n  useEffect(() => {\n    const fetchSurveys = async () => {\n      try {\n        const response = await fetch(API_URL);\n        if (!response.ok) throw new Error('Error al obtener los datos');\n        const data = await response.json();\n        setSurveys(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSurveys();\n  }, []);\n  const groupedResponses = useMemo(() => {\n    return surveys.reduce((acc, survey) => {\n      const date = new Date(survey._submission_time).toLocaleDateString();\n      (acc[date] = acc[date] || []).push(survey);\n      return acc;\n    }, {});\n  }, [surveys]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"danger\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: onBack,\n        text: \"Volver a reportes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-3\",\n        children: \"Reporte Subestaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), view === 'summary' ? /*#__PURE__*/_jsxDEV(Card, {\n      className: \"border-0 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"bg-white d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: \"Resumen de reportes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge bg-primary\",\n          children: [surveys.length, \" total\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: Object.entries(groupedResponses).map(([date, responses]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [date, \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: [\"(\", responses.length, \" reporte\", responses.length !== 1 ? 's' : '', \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-primary\",\n            size: \"sm\",\n            onClick: () => {\n              setView('detail');\n              setSelectedDate(date);\n            },\n            children: \"Ver reporte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)]\n        }, date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: () => {\n          setView('summary');\n          setSelectedDate(null);\n        },\n        text: \"Volver al resumen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), (_groupedResponses$sel = groupedResponses[selectedDate]) === null || _groupedResponses$sel === void 0 ? void 0 : _groupedResponses$sel.map((response, index) => {\n        const normalizedData = normalizeKeys(response);\n        const imageMap = mapAttachments(response);\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4 border-0 shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Accordion, {\n              children: Object.entries(GROUPS).map(([groupName, fields], groupIndex) => {\n                const groupData = fields.filter(field => normalizedData[field] !== undefined);\n                if (groupData.length === 0) return null;\n                return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                  eventKey: groupIndex.toString(),\n                  children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                    children: groupName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                    children: groupData.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3 border-bottom pb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [field.replace(/_/g, ' '), \":\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 33\n                      }, this), \" \", renderValue(field, normalizedData[field], imageMap)]\n                    }, field, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 27\n                  }, this)]\n                }, groupIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyResponses, \"Qr3gqBxdcHdw7rXlol6OF19VlJI=\");\n_c2 = SurveyResponses;\nexport default SurveyResponses;\nvar _c, _c2;\n$RefreshReg$(_c, \"BackButton\");\n$RefreshReg$(_c2, \"SurveyResponses\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","Card","Button","Accordion","Image","Alert","Spinner","ArrowLeft","jsxDEV","_jsxDEV","API_URL","EXCLUDED_FIELDS","Set","GROUPS","normalizeKeys","data","normalizedData","key","newKey","split","pop","mapAttachments","response","imageMap","_attachments","forEach","att","question_xpath","download_url","parseCoordinates","locationString","coords","length","lat","parseFloat","lon","BackButton","onClick","text","variant","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","renderValue","value","src","alt","thumbnail","style","maxWidth","maxHeight","href","target","rel","Number","Array","isArray","join","String","SurveyResponses","onBack","_s","_groupedResponses$sel","surveys","setSurveys","loading","setLoading","error","setError","view","setView","selectedDate","setSelectedDate","fetchSurveys","fetch","ok","Error","json","message","groupedResponses","reduce","acc","survey","date","Date","_submission_time","toLocaleDateString","push","animation","Header","Body","Object","entries","map","responses","size","index","groupName","fields","groupIndex","groupData","filter","field","undefined","Item","eventKey","toString","replace","_c2","$RefreshReg$"],"sources":["C:/Users/gonza/Desktop/front-demo/src/components/SurveyList.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport { Card, Button, Accordion, Image, Alert, Spinner } from 'react-bootstrap';\r\nimport { ArrowLeft } from 'react-bootstrap-icons';\r\n\r\n// URL de la API\r\nconst API_URL = 'http://localhost:5000/api/surveys';\r\n\r\n// Campos que se deben excluir de la visualización\r\nconst EXCLUDED_FIELDS = new Set([\r\n  '_id', 'start', 'end', 'formhub/uuid', '_status', '_geolocation',\r\n  '_tags', '_notes', '_validation_status', '_submitted_by', '_submission_time',\r\n  '__version__', '_uuid', 'meta/instanceID', 'meta/rootUuid', 'meta/deprecatedID'\r\n]);\r\n\r\n// Grupos de preguntas\r\nconst GROUPS = {\r\n  \"Información General\": [\"nombre_subestacion\", \"Ubicacion\", \"codigo_id\", \"fecha_reporte\", \"inspector_responsable\"],\r\n  \"Transformadores\": [\"cantidad_transformadores\", \"tipo_transformador\", \"potencia_nominal\", \"tension_primaria\", \"tension_secundaria\", \"relacion_transformacion\", \"temperatura_operacion\", \"nivel_aceite\", \"foto_nivel_aceite\"],\r\n  \"Celdas e Interruptores\": [\"cantidad_celdas\", \"tipo_interruptor\", \"corriente_nominal\", \"voltaje_operacion\", \"estado_barras\", \"foto_estado_barras\"],\r\n  \"Protección y Seguridad\": [\"tipo_reles\", \"configuracion_disparo\", \"corriente_disparo\", \"tiempos_disparo\", \"estado_baterias\", \"foto_estado_baterias\"],\r\n  \"Puesta a Tierra\": [\"resistencia_tierra\", \"estado_conexiones_tierra\", \"foto_estado_tierra\"],\r\n  \"Enfriamiento y Comunicación\": [\"tipo_enfriamiento\", \"estado_ventiladores\", \"foto_estado_ventiladores\", \"tipo_comunicacion\", \"estado_comunicacion\"],\r\n  \"Condiciones Ambientales\": [\"temperatura_ambiente\", \"humedad_relativa\", \"condiciones_climaticas\", \"foto_condiciones_climaticas\"],\r\n  \"Observaciones y Acciones Correctivas\": [\"observaciones_generales\", \"acciones_correctivas\", \"urgencia_accion\", \"firma_inspector\"]\r\n};\r\n\r\n// 🔹 **FUNCIONES DE PROCESAMIENTO** 🔹\r\n\r\n// 1️⃣ Normaliza claves quitando prefijos `group_xxx/`\r\nconst normalizeKeys = (data) => {\r\n  let normalizedData = {};\r\n  for (let key in data) {\r\n    let newKey = key.split('/').pop(); // Elimina los prefijos del grupo\r\n    normalizedData[newKey] = data[key];\r\n  }\r\n  return normalizedData;\r\n};\r\n\r\n// 2️⃣ Asocia imágenes con sus preguntas correspondientes\r\nconst mapAttachments = (response) => {\r\n  let imageMap = {};\r\n  if (response._attachments) {\r\n    response._attachments.forEach(att => {\r\n      let key = att.question_xpath ? att.question_xpath.split('/').pop() : null;\r\n      if (key) imageMap[key] = att.download_url;\r\n    });\r\n  }\r\n  return imageMap;\r\n};\r\n\r\n// 3️⃣ Extrae coordenadas correctamente\r\nconst parseCoordinates = (locationString) => {\r\n  if (!locationString) return null;\r\n  let coords = locationString.split(' ');\r\n  if (coords.length >= 2) {\r\n    return { lat: parseFloat(coords[0]), lon: parseFloat(coords[1]) };\r\n  }\r\n  return null;\r\n};\r\n\r\n// 🔹 **COMPONENTES REACT** 🔹\r\n\r\nconst BackButton = ({ onClick, text }) => (\r\n  <Button variant=\"link\" onClick={onClick} className=\"text-decoration-none p-0\">\r\n    <ArrowLeft /> {text}\r\n  </Button>\r\n);\r\n\r\nconst renderValue = (key, value, imageMap) => {\r\n  if (value == null) return 'No respondido';\r\n\r\n  // Si es una imagen\r\n  if (imageMap[key]) {\r\n    return (\r\n      <div className=\"mt-2\">\r\n        <Image src={imageMap[key]} alt={key} thumbnail style={{ maxWidth: '150px', maxHeight: '150px' }} />\r\n        <br />\r\n        <a href={imageMap[key]} target=\"_blank\" rel=\"noopener noreferrer\">Ver imagen en tamaño completo</a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Si es un alerta (ej: temperatura alta)\r\n  if (key === 'temperatura_operacion' && Number(value) > 100) {\r\n    return <Alert variant=\"warning\"><strong>⚠ Advertencia:</strong> Temperatura alta ({value}°C)</Alert>;\r\n  }\r\n\r\n  return Array.isArray(value) ? value.join(', ') : String(value);\r\n};\r\n\r\nconst SurveyResponses = ({ onBack }) => {\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [view, setView] = useState('summary');\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchSurveys = async () => {\r\n      try {\r\n        const response = await fetch(API_URL);\r\n        if (!response.ok) throw new Error('Error al obtener los datos');\r\n        const data = await response.json();\r\n        setSurveys(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSurveys();\r\n  }, []);\r\n\r\n  const groupedResponses = useMemo(() => {\r\n    return surveys.reduce((acc, survey) => {\r\n      const date = new Date(survey._submission_time).toLocaleDateString();\r\n      (acc[date] = acc[date] || []).push(survey);\r\n      return acc;\r\n    }, {});\r\n  }, [surveys]);\r\n\r\n  if (loading) return <Spinner animation=\"border\" />;\r\n  if (error) return <Alert variant=\"danger\">Error: {error}</Alert>;\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <div className=\"mb-4\">\r\n        <BackButton onClick={onBack} text=\"Volver a reportes\" />\r\n        <h4 className=\"mt-3\">Reporte Subestación</h4>\r\n      </div>\r\n      {view === 'summary' ? (\r\n        <Card className=\"border-0 shadow-sm\">\r\n          <Card.Header className=\"bg-white d-flex justify-content-between align-items-center\">\r\n            <h5 className=\"mb-0\">Resumen de reportes</h5>\r\n            <span className=\"badge bg-primary\">{surveys.length} total</span>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {Object.entries(groupedResponses).map(([date, responses]) => (\r\n              <div key={date} className=\"list-group-item\">\r\n                <h6>{date} <small className=\"text-muted\">({responses.length} reporte{responses.length !== 1 ? 's' : ''})</small></h6>\r\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={() => { setView('detail'); setSelectedDate(date); }}>Ver reporte</Button>\r\n              </div>\r\n            ))}\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        <div>\r\n          <BackButton onClick={() => { setView('summary'); setSelectedDate(null); }} text=\"Volver al resumen\" />\r\n          {groupedResponses[selectedDate]?.map((response, index) => {\r\n            const normalizedData = normalizeKeys(response);\r\n            const imageMap = mapAttachments(response);\r\n\r\n            return (\r\n              <Card key={index} className=\"mb-4 border-0 shadow-sm\">\r\n                <Card.Body>\r\n                  <Accordion>\r\n                    {Object.entries(GROUPS).map(([groupName, fields], groupIndex) => {\r\n                      const groupData = fields.filter(field => normalizedData[field] !== undefined);\r\n                      if (groupData.length === 0) return null;\r\n\r\n                      return (\r\n                        <Accordion.Item key={groupIndex} eventKey={groupIndex.toString()}>\r\n                          <Accordion.Header>{groupName}</Accordion.Header>\r\n                          <Accordion.Body>\r\n                            {groupData.map(field => (\r\n                              <div key={field} className=\"mb-3 border-bottom pb-3\">\r\n                                <strong>{field.replace(/_/g, ' ')}:</strong> {renderValue(field, normalizedData[field], imageMap)}\r\n                              </div>\r\n                            ))}\r\n                          </Accordion.Body>\r\n                        </Accordion.Item>\r\n                      );\r\n                    })}\r\n                  </Accordion>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyResponses;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}